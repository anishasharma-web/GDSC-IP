class Solution {
public:
    unordered_map<int, int> m;
    TreeNode* build(vector<int>& in, vector<int>& post, int &idx, int left, int right) {
        if(left>right) return NULL;
        int pivot = m[post[idx]];
        idx--;
        TreeNode* node = new TreeNode(in[pivot]);
        node->right = build(in, post, idx, pivot+1, right);
        node->left = build(in, post, idx, left, pivot-1);
        return node;
    }
    TreeNode* buildTree(vector<int>& inorder, vector<int>& postorder) {
        int rootIdx = postorder.size()-1;
        for(int i=0; i<inorder.size(); i++) m[inorder[i]] = i;
        return build(inorder, postorder, rootIdx, 0, inorder.size()-1);
    }
};
